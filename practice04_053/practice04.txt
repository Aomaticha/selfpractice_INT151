//26.08.2025
//prompt 1 เขียนฟังก์ชันใน JavaScript ชื่อ greet ที่รับค่าพารามิเตอร์หนึ่งตัว นั่นคือ name ซึ่งเป็นสตริง (string) ที่แทนชื่อของบุคคล
//ฟังก์ชันนี้ควรจะ: คืนค่าสตริง ที่เป็นข้อความทักทาย ข้อความทักทายควรมีรูปแบบว่า: "Hello [name]! nice to meet you" ถ้าไม่มีการป้อนชื่อมา หรือป้อนค่าที่ไม่ใช่สตริง (เช่น null, undefined, หรือตัวเลข) ให้ return "Visitors" แทน
ข้อนี้จะเป็นการเขียน function และการเทียบ typeof และมีการใช้ method .trim() เพื่อลบช่องว่าง '' ออก เริ่มแรกประกาศ function greet มาแล้วรับพารามิเตอร์ name เริ่มด้วย if เพื่อเช็คว่าค่าที่ให้มาเป็น string มั้ยโดยบอกว่า name !=='string' และใช้ .trim() ตัดช่องว่างไปด้วยเพื่อให้แน่ใจว่าไม่มีการป้อนชื่อเข้ามาจริงๆถึงจะเป็นการใส่เครื่องหมาย string ก็ตาม ถ้าเข้าเงื่อนไขพวกนี้ให้ return "Visitors" นอกเหนือจากนั้น ให้ return Hello แล้วตามด้วยชื่อที่ป้อนเข้าไปโดยใช้ ${} เพื่อใช้ พารามิเตอร์ name เข้าไปแล้วตามด้วย  nice to meet you
ข้อนี้ได้ลองใช้ .trim() เพื่อตัดช่องว่างออกทำให้ในเครื่องหมาย string ไม่มีช่องว่างหรือแปรว่าไม่มีการใส่ข้อมูลเข้ามาถึงจะมีเครื่องหมาย string อยู่

//prompt 2 เขียนฟังก์ชันใน JavaScript ชื่อ findMax ที่รับค่าพารามิเตอร์หนึ่งตัว นั่นคือ numbers ซึ่งเป็นอาเรย์ของตัวเลข
// ฟังก์ชันนี้ควรจะ: คืนค่าตัวเลข ที่เป็นค่ามากที่สุดในอาเรย์ถ้าอาเรย์ที่ป้อนมา ถ้าอาเรย์ว่างเปล่า ([]) ให้คืนค่าเป็น undefined
ข้อนี้ได้เขียน function หาค่าที่มากที่สุดใน array แต่ข้อนี้ได้ลองวิธีแบบสั้นโดยใช้ function Math.max() ในการหาค่าที่มากทีสุดและใช้ ...Spread Operator เพื่อกระจายค่าเข้าไป เริ่มด้วยประกาศ function findMax รับพารามิเตอร์ numbers และจะเริ่มเช็คก่อนว่าป็น array เปล่ามั้ย ก็ใช้ .length ถ้า numbers.length === ให้ return undifined ถ้าไม่ใช้ก็ให้ return ค่าที่มากที่สุด โดยใช้ Math.maxและใช้ ...Spread Operator เพื่อที่จะกระจายค่าจาก array ออกมาเป็น argument ทีละตัว 
ข้อนี้ได้รู้จักการใช้ function Math.max เพื่อหาค่าที่มากที่สุดทำให้สะดวกกว่าการหาแบบใช้ for loop หรือใช้ method array หาและได้ฝึกใช้ Spread Operator เพื่อกระจายค่า



//27.08.2025
//prompt 1 สร้างออบเจกต์ (Object) แต่ละออบเจกต์จะแทนข้อมูลของนักเรียนหนึ่งคนและมีคุณสมบัติ (properties) name: ชื่อของนักเรียน (string)score: คะแนนของนักเรียน (number)
//ใช้ Array method กรองนักเรียนที่มีคะแนน score มากกว่าหรือเท่ากับ 70แปลง ข้อมูลของนักเรียนที่ผ่านการกรองแล้ว ให้กลายเป็น อาเรย์ของชื่อ ของนักเรียนเหล่านั้น
ข้อนี้ได้ลองใช้ method array .filter() และ .map() เพื่อหาคนที่คะแนนเกิน 70 แล้วเอาชื่อนักเรียนเหล่านั้นมา เรื่มเราจะประกาศตังแปรออกมาเพื่อเก็บค่าที่เราแปลงก็จะประกาศเป็น honorStudents แล้วเราจะจะใช้ค่าที่เราประกาศข้อมูล  studentsData แล้วใส่.filter เพื่อจะเอานักเรียนที่คะแนนเกิน 70 ก็จะใช้เป็นการเขียนแบบ (str) => str.score เป็น Arrow Function (str)  คือ parameter (ตัวแปรรับค่า) str.score คือ ค่าที่ return ออกมาจาก object str โดยเข้าถึง property score (str.score) ก็จะเขียน str.score >= 70 และต่อมาก็จะใช้ .map เอาชื่อนักเรียนที่คะแนนเกิน 70 ออกมาก็จะเขียนแบบ (st) => st.name ก็จะประกาศค่า st ขึ้นมาแลวก็ให้เข้าถึง parameter .name 
ข้อนี้ได้ฝึกการเขียน Array methodว่า .filter คือกรองเอาค่าที่ตามเงื่อนไขมา และ .map คือการเอาค่าที่เราต้องการจากในข้อมูลที่เรากำหนดค่าไว้ออกมาและ .map ยังใช้แปลงค่าของแต่ละ element แล้วคืนค่าเป็น  array ใหม่ได้ด้วย และได้ลองเขียนแบบ Arrow function เป็นแบบการขียน function รูปแบบย่อ

//prompt 2 ใช้ filter() เพื่อเลือกสินค้าที่มีราคา ไม่เกิน 15000 และใช้ reduce() เพื่อหาผลรวมราคาของสินค้าทั้งหมด
ข้อนี้ก็ได้ใช้ Array method .filter() และ .reduce() เพื่อหาสินค้าที่ราคาไม่เกิน 15000 และรวมราคาทั้งหมด ก็จะประกาศตัวแปรขึ้นมาเพื่อเก็บค่าที่เราทำ และก็ใช้ .filter() เพื่อหาสินค้าที่ราคาไม่เกิน 15000 p => p.price < 15000 ต่อมาก็จะสร้างตัวแปรใหม่เพื่อเก็บค่าผลรวมทั้งหมด โดยใช้ .reduce() ก็จเขียนแบบ products.reduce หมายความว่าเราเอาค่าproducts มาใช้ method .reduce()แล้วเราจะเขียนในวงเล็บต่อว่า (sum, products) => sum + products.price  sum ตัวสะสมค่า (ในที่นี้คือผลรวมราคาสินค้า)
products คือ แต่ละ element ของ array (ในที่นี้แต่ละ element คือ object ของสินค้า เช่น {name: "Apple", price: 10}) sum + products.price → เพิ่มราคาสินค้าตัวปัจจุบันเข้าไปในผลรวม และก็จะใส่ 0 ตรงท้ายเพื่อบอกว่าค่า sum เริ่มด้วย 0
ข้อนี้ได้ลองใช้ method array .reduce() คือการรวมค่าจาก array หลายๆ ตัวให้ออกมาเป็นค่าเดียว และได้ใช้ .filter() เพื่อกรองค่าเอาสินค่าที่ราคาไม่เกิน 15000 ออกมา

//prompt 3 คำนวณ total ทั้งหมดของ productList ต่อไปนี้โดยใช้และนำไปลบ cost (ต้นทุน) ว่าเหลือเงินกี่บาท
ข้อนี้ก้ได้ใช้ method .reduce() โดยการคูณราคากับที่ชื้อไปทั้งหมดกี่ชิ้นและนำผลไปลบกับเงินต้น โดยเริ่มแรกเราจะประกาศก่อนว่าเงินต้นเท่ากับกี่บาท const cost = 300000; และก้กำหนด productList สินค้าที่ซื้อราคาและจำนวนที่ซื้อ โดยเริ่มเราก็จะประกาศตัวแปรเพื่อเก็บค่าผลคูณของเราก่อนโดยจะประกาศแบบนี้ const total = (price,amount) => (price * amount); เราก็จะให้  price * amount คูณกันและต่อมาก็จะเอาทั้งหมดมาคำนวณ ก็จะประกาศขึ้นมาอีกตัวแปรนึงเป็น totalSum เริ่มด้วยเราจะตั้ง cost - แล้วก็จะคำนวณตรงนี้ productList.reduce((sum,item) => sum + total(item.price,item.amount),0); เพื่อให้ได้เงินที่ซื้อสินค้าทั้งหมดแล้ว cost ก็จะลบออกมาเหลือเท่าไร
ข้อนี้ก็จะได้ใช้ method คำนวณค่าผลรวมทั้งหมดและได้ลองประกาศตัวแปรเพิ่มขึ้นมาเพื่อนำมาคำนวณด้วย



//28.08.2025
//prompt 1 เขียนโค้ดที่ใช้ find() เพื่อหาคนที่มี id = 2 และใช้ filter() และ includes() เพื่อหาคนที่ชอบ swimming และ .map() ชื่อคนที่ชอบ swimming ออกมา
ข้อนี้ก็จะใช้ method array .find() หาคนที่ id === 2 ออกมา ก็จะเขียนแบบนี้ const find = users.find((f) => f.id === 2); ประกาศค่าออกมาแล้วใช้ users.find แล้วต่อมาก็กำหนดตัวที่รับค่า id === 2 ได้เลย ต่อมาจะกรองคนที่ชอบว่ายน้ำ ก็จะใช้ .filter เพื่อดูว่าตรงเงื่อนไขมั้ย เงื่อนไขก็คือ (l) => l.hobbies.includes("swimming")  เงื่อนไข: user ต้องมี "swimming" ใน hobbies ก็จะใช้ .includes ในเงื่อนไขเพื่อหาว่ามีคนที่ชอบว่ายน้ำมั้ย  ต่อมาก็จะใช้ .map เพื่อกรองชื่อคนที่ชอบว่ายน้ำออกมา like.map((u) => u.name like ก็คือตัวที่เรากรองข้อมูลมาเมื่อกี้แล้วก็ใช้ .map เอาชื่อออกมาโดยก็ประกาศตังแปรแล้วก็ .name 
ข้อนี้ได้ลองใช้ .includes ในเงื่อนไข .filter()แล้วได้ใช้ .find() เพื่อหาคนที id = 2 แล้วได้รู้ว่า .filter()และ  .find() ทำงานต่างกันตรงที่ .find() ใช้ ค้นหา element แรกที่ตรงตามเงื่อนไข(return ตัวแรกที่ตรงตามเงื่อนไข) แต่ .filter() ใช้ กรอง element ทุกตัวที่ตรงตามเงื่อนไข 



//30.08.2025
//prompt 1  ใช้ forEach() ในการรวมผลคะแนนทั้งหมด
ข้อนี้ได้ใช้ forEach() ในการวนลูปรวมผลคะแนน เริ่มด้วย let totalScore = 0; → ประกาศตัวแปรเก็บผลรวม เริ่มจาก 0  scores.forEach(num => { totalScore += num; }); .forEach() → เป็น array method ใช้วนซ้ำทุก element ใน array  num  คือตัวเลขแต่ละตัวใน array { totalScore += num; }  คือบวกเลขแต่ละตัวเข้ากับ totalScore
ข้อนี้ได้ลองใช้ .forEach() ใช้ วนรอบแต่ละ element เพื่อทำงานกับค่าทุกตัวเหมือนกับการเขียน for loop วนค่าแต่ละตัวแต่อันนีเป็นการเขียนแบบ Arrow function เป็นการเขียน function แบบง่าย






